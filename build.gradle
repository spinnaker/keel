/*
 * Copyright 2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  repositories {
    jcenter()
    gradlePluginPortal()
    maven { url "https://spinnaker.bintray.com/gradle" }
  }
  dependencies {
    classpath "com.netflix.spinnaker.gradle:spinnaker-dev-plugin:5.2.2"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$bootVersion"
    classpath "com.netflix.nebula:nebula-kotlin-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}

allprojects {
  apply plugin: "spinnaker.base-project"

  group = "com.netflix.spinnaker.keel"

  ext {
    spinnakerDependenciesVersion = "1.30.0"
    if (project.hasProperty("spinnakerDependenciesVersion")) {
      spinnakerDependenciesVersion = project.property("spinnakerDependenciesVersion")
    }
  }

  spinnaker {
    dependenciesVersion = spinnakerDependenciesVersion
  }

  configurations.all {
    exclude group: "javax.servlet", module: "servlet-api"
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "org.slf4j", module: "slf4j-simple"
  }
}

subprojects {
  apply from: "$rootDir/gradle/kotlin.gradle"
  apply from: "$rootDir/gradle/junit5.gradle"
  apply from: "$rootDir/gradle/license.gradle"

  repositories {
    jcenter()
  }
  
  dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:$bootVersion")
    testImplementation platform("org.junit:junit-bom:${spinnaker.version('jupiter')}")
  }

  configurations.all {
    resolutionStrategy {
      eachDependency {
        if (it.requested.group.startsWith("com.fasterxml.jackson")) {
          it.useVersion(spinnaker.version("jackson"))
        }
      }
    }
  }

  test {
    testLogging {
      exceptionFormat = "full"
    }
  }
}

defaultTasks ":keel-api:run"
